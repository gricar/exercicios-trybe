-- 1. Escreva uma query que exiba o maior sal√°rio da tabela.
SELECT MAX(SALARY)
FROM hr.employees;

-- 2. üöÄ Escreva uma query que exiba a diferen√ßa entre o maior e o menor sal√°rio.
SELECT MAX(SALARY) - MIN(SALARY)
FROM hr.employees;

-- 3. üöÄ Escreva uma query que exiba a m√©dia salarial de cada JOB_ID , ordenando pela m√©dia salarial em ordem decrescente.
SELECT JOB_ID, AVG(SALARY) AS avg_salary
FROM hr.employees
GROUP BY JOB_ID
ORDER BY avg_salary DESC;

-- 4. Escreva uma query que exiba a quantidade de dinheiro necess√°ria para realizar o pagamento de todas as pessoas funcion√°rias.
SELECT SUM(SALARY) FROM hr.employees;

-- 5. üöÄ Escreva uma query que exiba quatro informa√ß√µes: o maior sal√°rio, o menor sal√°rio, a soma de todos os sal√°rios e a m√©dia dos sal√°rios. Todos os valores devem ser formatados para ter apenas duas casas decimais.
SELECT
	ROUND(MAX(SALARY), 2),
	ROUND(MIN(SALARY), 2),
	ROUND(SUM(SALARY), 2),
	ROUND(AVG(SALARY), 2),
FROM hr.employees;

-- 6. Escreva uma query que exiba a quantidade de pessoas que trabalham como pessoas programadoras ( IT_PROG ).
SELECT JOB_ID , COUNT(*) AS 'total'
FROM hr.employees
WHERE JOB_ID = "IT_PROG";

-- 7. Escreva uma query que exiba a quantidade de dinheiro necess√°ria para efetuar o pagamento de cada profiss√£o ( JOB_ID ).
SELECT JOB_ID, SUM(SALARY)
FROM hr.employees
GROUP BY JOB_ID;

-- 8. Utilizando a query anterior, fa√ßa as altera√ß√µes para que seja exibido somente a quantidade de dinheiro necess√°ria para cobrir a folha de pagamento das pessoas programadoras ( IT_PROG ).
SELECT JOB_ID, SUM(SALARY)
FROM hr.employees
GROUP BY JOB_ID
WHERE JOB_ID = "IT_PROG";

-- 9. Escreva uma query que exiba em ordem decrescente a m√©dia salarial de todos os cargos, exceto das pessoas programadoras ( IT_PROG ).
SELECT JOB_ID, AVG(SALARY) AS 'avg_salary'
FROM hr.employees
WHERE JOB_ID <> "IT_PROG"
GROUP BY JOB_ID
ORDER BY 'avg_salary' DESC;

-- 10. üöÄ Escreva um query que exiba m√©dia salarial e o n√∫mero de funcion√°rios de todos os departamentos com mais de dez funcion√°rios. Dica: agrupe pelo DEPARTMENT_ID .
SELECT department_id,
			AVG(salary) AS 'avg_salary',
			COUNT(*) AS 'num_of_employees'
FROM hr.employees
GROUP BY department_id
HAVING `num_of_employees` > 10;

-- 11. üöÄ Escreva uma query que atualize a coluna PHONE_NUMBER , de modo que todos os telefones iniciados por 515 agora devem iniciar com 777 .
SET SQL_SAFE_UPDATES = 0;

UPDATE hr.employees
SET phone_number = REPLACE(phone_number, '515', '777')
WHERE phone_number LIKE '515%';

SET SQL_SAFE_UPDATES = 1;

-- 12. Escreva uma query que s√≥ exiba as informa√ß√µes dos funcion√°rios cujo o primeiro nome tenha oito ou mais caracteres.
SELECT *
FROM hr.employees
WHERE LENGTH(first_name) >= 8;

-- 13. Escreva uma query que exiba as seguintes informa√ß√µes de cada funcion√°rio: id , primeiro nome e ano no qual foi contratado (exiba somente o ano).
SELECT employee_id, first_name, YEAR(hire_date) AS 'hire_year'
FROM hr.employees;

-- 14. üöÄ Exiba as seguintes informa√ß√µes de cada funcion√°rio: id , primeiro nome e dia do m√™s no qual foi contratado (exiba somente o dia).
SELECT employee_id, first_name, DAY(hire_date) AS 'hire_day'
FROM hr.employees;
-- OR
SELECT employee_id, first_name, RIGHT(hire_date, 2) AS 'hire_day'
FROM hr.employees;

-- 15. Exiba as seguintes informa√ß√µes de cada funcion√°rio: id , primeiro nome e m√™s no qual foi contratado (exiba somente o m√™s).
SELECT employee_id, first_name, MONTH(hire_date) AS 'hire_month'
FROM hr.employees;
-- OR
SELECT employee_id, first_name, SUBSTRING(hire_date, 6, 2) 'hire_month'
FROM hr.employees;

-- 16. Escreva uma query que exiba os nomes dos funcion√°rios em letra mai√∫scula.
SELECT UCASE(CONCAT(first_name, ' ', last_name))
FROM hr.employees;

-- 17: Escreva uma query que exiba o sobrenome e a data de contrata√ß√£o de todos os funcion√°rio contratados em julho de 1987.
SELECT last_name, hire_date
FROM hr.employees
WHERE hire_date BETWEEN '1987-07-01' AND '1987-07-31';
--OR
WHERE MONTH(hire_date) = 7 AND YEAR(hire_date) = 1987;

-- 18: üöÄ Exiba as seguintes informa√ß√µes de cada funcion√°rio: nome , sobrenome , tempo que trabalha na empresa (em dias) .
SELECT first_name, last_name,
	DATEDIFF(CURRENT_DATE(), hire_date) AS days_of_working
FROM hr.employees;
