-- Criado o BD via sequelize, conforme nome declarado na .env
$ npx sequelize db:create

1) Criado a "migration" para criar uma tabela de livros
$ npx sequelize migration:generate --name create-books

1.1) Preenchido o arquivo migration -> ...-create-books.js
-- colocado as colunas e seus tipos e regras de preenchimento.

1.2) Executando o comandar para criar a tabela no BD. Pode verificar MYSQL workbench
$ npx sequelize db:migrate

---------------------------------------------------------------------------------------

2) Crie o model Book utilizando a API do Sequelize.
-- criado um arquivo "book" na pasta models com a função contendo os DataTypes

---------------------------------------------------------------------------------------

3) Crie um service BooksService com o método getAll para retornar uma lista de livros por meio do model Book.
-- documentação tem a query: https://sequelize.org/docs/v6/core-concepts/model-querying-basics/

---------------------------------------------------------------------------------------

4) Crie um controller BooksController com o método getAll 
5) Vincule a rota GET /books para acessar seu controller.


- BONUS
1) Crie um seeder usando o Sequelize-CLI, populando a sua base com pelo menos um livro;
$ npx sequelize seed:generate --name books

1.1) Popular o arquivo seeder; executar o comando:
$ npx sequelize db:seed:all

2) Crie uma migration para adicionar a coluna publisher (editora) na tabela Books. Modifique as camadas de serviço para que esse campo seja utilizado no cadastro e na edição.
$ npx sequelize migration:generate --name add-publisher-to-books

-- editado arquivo
$ npx sequelize db:migrate

